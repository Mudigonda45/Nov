import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

// Class to represent a Book
class Book {
    private static int idCounter = 1; // Static counter to auto-increment IDs
    private int id;
    private String title;
    private String author;
    private String genre;

    public Book(String title, String author, String genre) {
        this.id = idCounter++;  // Auto-increment ID
        this.title = title;
        this.author = author;
        this.genre = genre;
    }

    public int getId() {
        return id;
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public String getGenre() {
        return genre;
    }

    public String toString() {
        return "Book [ID=" + id + ", Title=" + title + ", Author=" + author + ", Genre=" + genre + "]";
    }
}

// Class to manage a collection of books
class Library {
    private List<Book> books;

    public Library() {
        books = new ArrayList<>();
    }

    // Add a book to the library
    public void addBook(Book book) {
        books.add(book);
        System.out.println("Book added: " + book);
    }

    // View all books
    public void viewBooks() {
        if (books.isEmpty()) {
            System.out.println("No books in the library.");
        } else {
            books.forEach(System.out::println);
        }
    }

    // Search for a book by title or author
    public void searchBook(String query) {
        boolean found = false;
        for (Book book : books) {
            if (book.getTitle().equalsIgnoreCase(query) || book.getAuthor().equalsIgnoreCase(query)) {
                System.out.println(book);
                found = true;
            }
        }
        if (!found) {
            System.out.println("No book found for query: " + query);
        }
    }

    // Remove a book by ID
    public void removeBook(int id) {
        Book bookToRemove = null;
        for (Book book : books) {
            if (book.getId() == id) {
                bookToRemove = book;
                break;
            }
        }
        if (bookToRemove != null) {
            books.remove(bookToRemove);
            System.out.println("Removed book: " + bookToRemove);
        } else {
            System.out.println("Error: No book with the specified ID found.");
        }
    }
}

// Main class to run the Library application
public class LibraryApp {
    public static void main(String[] args) {
        Library library = new Library();
        Scanner scanner = new Scanner(System.in);
        boolean running = true;

        while (running) {
            System.out.println("\nLibrary Management System");
            System.out.println("1. Add Book");
            System.out.println("2. View All Books");
            System.out.println("3. Search Book");
            System.out.println("4. Remove Book");
            System.out.println("5. Exit");
            System.out.print("Choose an option: ");

            int choice;
            try {
                choice = Integer.parseInt(scanner.nextLine());
            } catch (NumberFormatException e) {
                System.out.println("Invalid input. Please enter a number.");
                continue;
            }

            switch (choice) {
                case 1:
                    System.out.print("Enter book title: ");
                    String title = scanner.nextLine();
                    System.out.print("Enter book author: ");
                    String author = scanner.nextLine();
                    System.out.print("Enter book genre: ");
                    String genre = scanner.nextLine();
                    Book newBook = new Book(title, author, genre);
                    library.addBook(newBook);
                    break;

                case 2:
                    library.viewBooks();
                    break;

                case 3:
                    System.out.print("Enter book title or author to search: ");
                    String query = scanner.nextLine();
                    library.searchBook(query);
                    break;

                case 4:
                    System.out.print("Enter book ID to remove: ");
                    int id;
                    try {
                        id = Integer.parseInt(scanner.nextLine());
                        library.removeBook(id);
                    } catch (NumberFormatException e) {
                        System.out.println("Invalid ID. Please enter a number.");
                    }
                    break;

                case 5:
                    running = false;
                    break;

                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
        scanner.close();
    }
}
